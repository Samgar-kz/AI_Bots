import gspread
from google.oauth2.service_account import Credentials
from datetime import datetime
import time
from config import GOOGLE_SHEETS_JSON, SPREADSHEET_NAME
from logger import logger

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ Google Sheets
scopes = ["https://www.googleapis.com/auth/spreadsheets", "https://www.googleapis.com/auth/drive"]
credentials = Credentials.from_service_account_file(GOOGLE_SHEETS_JSON, scopes=scopes)
gc = gspread.authorize(credentials)
sheet = gc.open(SPREADSHEET_NAME)

# –ö—ç—à –¥–∞–Ω–Ω—ã—Ö
cached_data = {"products": [], "faq": [], "last_updated": 0}

def update_cache():
    """–û–±–Ω–æ–≤–ª—è–µ—Ç –∫—ç—à —Ç–æ–≤–∞—Ä–æ–≤ –∏ FAQ —Ä–∞–∑ –≤ 10 –º–∏–Ω—É—Ç"""
    global cached_data
    now = time.time()
    if now - cached_data["last_updated"] > 600:  # 10 –º–∏–Ω—É—Ç
        try:
            logger.info("üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Google Sheets...")
            cached_data["products"] = sheet.worksheet("Products").get_all_records()
            cached_data["faq"] = sheet.worksheet("FAQ").get_all_records()
            cached_data["last_updated"] = now
            logger.info("‚úÖ –î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫—ç—à–∞: {e}")

def get_product_info(product_name):
    """–ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–≤–∞—Ä–µ –∏–∑ –∫—ç—à–∞"""
    update_cache()  # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥ –ø–æ–∏—Å–∫–æ–º
    product_name = product_name.strip().lower()

    for row in cached_data["products"]:
        if row["–¢–æ–≤–∞—Ä"].strip().lower() == product_name:
            return f"üì¶ {row['–¢–æ–≤–∞—Ä']}\nüí∞ –¶–µ–Ω–∞: {row['–¶–µ–Ω–∞']}\nüìñ {row['–û–ø–∏—Å–∞–Ω–∏–µ']}", row.get("–§–æ—Ç–æ", None)

    return None, None

def get_faq_answer(question):
    """–ò—â–µ–º –æ—Ç–≤–µ—Ç –≤ FAQ –∏–∑ –∫—ç—à–∞"""
    update_cache()  # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥ –ø–æ–∏—Å–∫–æ–º
    question = question.strip().lower()

    for row in cached_data["faq"]:
        if question in row["–í–æ–ø—Ä–æ—Å"].strip().lower():
            return row["–û—Ç–≤–µ—Ç"]

    return None


def log_query(user_question, bot_answer):
    """–õ–æ–≥–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Google Sheets"""
    try:
        analytics_sheet = sheet.worksheet("Analytics")
        analytics_sheet.append_row([user_question, datetime.now().strftime("%Y-%m-%d %H:%M:%S"), bot_answer])
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –≤ Google Sheets: {e}")